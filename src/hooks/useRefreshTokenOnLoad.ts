import { useEffect } from 'react';
import { useAuthStore } from '@/infrastructure/storage/tokenStorage';
import { isTokenValid } from '@/utils/jwt';

/**
 * Hook ƒë·ªÉ refresh token khi v√†o trang (ch·ªâ khi token s·∫Øp h·∫øt h·∫°n)
 * Kh√¥ng refresh li√™n t·ª•c ƒë·ªÉ tr√°nh overhead
 */
export const useRefreshTokenOnLoad = () => {
  const refreshTokenAsync = useAuthStore((state) => state.refreshTokenAsync);
  const token = useAuthStore((state) => state.token);

  useEffect(() => {
    const refreshIfNeeded = async () => {
      // Ch·ªâ refresh n·∫øu c√≥ token v√† token s·∫Øp h·∫øt h·∫°n (trong v√≤ng 2 ph√∫t)
      if (token && isTokenValid(token)) {
        try {
          const payload = JSON.parse(atob(token.split('.')[1]));
          const expirationTime = payload.exp * 1000;
          const timeUntilExpiry = expirationTime - Date.now();
          
          // N·∫øu token h·∫øt h·∫°n trong v√≤ng 2 ph√∫t, refresh ngay
          if (timeUntilExpiry < 2 * 60 * 1000) {
            console.log('üîÑ Token expires soon, refreshing on page load...');
            await refreshTokenAsync();
          } else {
            console.log('‚úÖ Token still valid, no refresh needed');
          }
        } catch (error) {
          console.error('‚ùå Error checking token expiry:', error);
        }
      }
    };

    refreshIfNeeded();
  }, [refreshTokenAsync, token]);
};
